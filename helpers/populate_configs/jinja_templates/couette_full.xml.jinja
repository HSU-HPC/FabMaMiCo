<?xml version="1.0"?>

<scenario-configuration>
  <!-- Configuration for CouetteScenario.h, a configurable Couette flow test for noise-filtered multi-instance Nie coupling -->
  <couette-test>
    <!-- Simulation domain / scenario parameters:
      - double channelheight:
        z distance between upper and lower wall (parallel plates)
        Since the domain is cubic, this determines also the domain size in x and y directions.
      - Vector<3,double> wall-velocity:
        Speed of moving wall (for all timesteps after wall-init-cycles coupling cycles)
      - optional int wall-init-cycles:
        Number of coupling cycles with wall-init-velocity applied instead of wall-velocity
        This can be used to investigate or initialize the simulation before the couette startup.
        There is no interpolation between wall-init-velocity and wall-velocity.
      - optional Vector<3,double> wall-init-velocity:
        Speed of moving wall, for the first wall-init-cycles simulation cycles
        Should be "0.0 ; 0.0 ; 0.0" unless e.g multi-stage startup is desired.
      - optional double wall-oscillations:
        To create oscillating couette scenario, define the total number of periods during all coupling cycles here.
        For every CYCLE after wall-init-cycles, wall speed will equal:
          wall-velocity * cos(2PI * wall-oscillations * CYCLE / coupling-cycles)
    -->
    <domain
      channelheight="{{ couette_test.domain.channelheight }}"
      wall-init-velocity="{{ couette_test.domain.wall_init_velocity }}"
      wall-init-cycles="{{ couette_test.domain.wall_init_cycles }}"
      wall-velocity="{{ couette_test.domain.wall_velocity }}"
      wall-oscillations="{{ couette_test.domain.wall_oscillations }}"
    />

    <!-- Coupled simulation general setup parameters:
      - int coupling-cycles:
        Total number of coupling cycles to run. Each cycle may consist of e.g. 100 MD timesteps.
      - bool two-way-coupling:
        Enables / disables the use of MD data as boundary condition in LBCouetteSolver.
      - bool send-from-md-to-macro:
        Enables / disables the data transfer from MD instances, merging, and communication to macroscopic-solver ranks.
      - bool send-from-macro-to-md:
        Enables / disables data extraction from couette solver and communication to MD ranks.
      - int filter-init-cycles:
        Number of cycles with two-way-coupling and compute-snr disabled at simulation startup, used for initialisation of noise filter. TODO rename?
      - int write-csv-every-timestep:
        Writes data collected by sendFromMD2Macro, i.e. noise filter output, to CSV file; for evaluation.
        timestep means coupling cycle here.
      - bool compute-snr:
        Enables / disables computation of signal-to-noise ratio between filter output and macroscopic solver, writes to stdout. Only for sequential tests.
    -->
    <coupling
      coupling-cycles="{{ couette_test.coupling.coupling_cycles }}"
      two-way-coupling="{{ couette_test.coupling.two_way_coupling }}"
      send-from-md-to-macro="{{ couette_test.coupling.send_from_md_to_macro }}"
      filter-init-cycles="{{ couette_test.coupling.filter_init_cycles }}"
      write-csv-every-timestep="{{ couette_test.coupling.write_csv_every_timestep }}"
      send-from-macro-to-md="{{ couette_test.coupling.send_from_macro_to_md }}"
      compute-snr="{{ couette_test.coupling.compute_snr }}"
    />

    <!-- Configuration parameters for macroscopic solver:
      - string type:
        Supports "lb" (Lattice Boltzmann solver), "fd" (simple, sequential finite difference solver), "foam" (sequential, finite difference solver icoFoam from OpenFOAM) or "analytical".
        Note that analytic solver only supports flow in x-direction, is only active on rank 0,
        and that it does not model viscous shear forces in the oscillating wall case (i.e. changes of wall-velocity are propagated through the whole domain instantaneously).
        The LB solver does not impose these limitations and can be parallelized.
      - lb: Vector<3,unsigned int> number-of-processes:
        Number of LB ranks per direction (x; y; z)
      - lb: int plot-every-timestep:
        VTK plotting per time step, only for LB solver
      - double viscosity:
        Dynamic viscosity of fluid
      - int init-advance-cycles:
        Advances the macroscopic-solver before starting the coupling. Can be used for analytic solver and oscillating wall,
        to skip couette startup.
      - foam: string foam-setup-directory:
        path to the OpenFOAM setup directory
      - foam: string foam-setup-folder:
        name of the OpenFOAM folder
      - foam: Vector<12,unsigned int> boundaries-with-MD:
        vector of '0' and '1', '1' for a boundary OpenFOAM when it shall be coupled with MaMiCo, uses the order according to the blockMesh order, '0' when the boundary shall not be coupled
    -->
    <macroscopic-solver
      type="{{ couette_test.macroscopic_solver.type }}"
      viscosity="{{ couette_test.macroscopic_solver.viscosity }}"
      number-of-processes="{{ couette_test.macroscopic_solver.number_of_processes }}"
      plot-every-timestep="{{ couette_test.macroscopic_solver.plot_every_timestep }}"
      init-advance-cycles="{{ couette_test.macroscopic_solver.init_advance_cycles }}"
      foam-setup-directory="{{ couette_test.macroscopic_solver.foam_setup_directory }}"
      foam-setup-folder="{{ couette_test.macroscopic_solver.foam_setup_folder }}"
      boundaries-with-MD="{{ couette_test.macroscopic_solver.boundaries_with_MD }}"
    />

    <!-- Configuration parameters for microscopic solver:
      - string type:
        Supports "md" (SimpleMD) or "synthetic" (data from macroscopic plus gaussian noise).
        Synthetic runs sequentially only and does not support parallel communication, so send-from-x-to-x must be "no".
        Hence, in the Synthetic + LB case, macroscopic-solver_number-of-processes must be "1 ; 1 ; 1"
        Synthetic MD does not support multi-instance sampling.
      - md: double temperature:
        Temperature of MD system, is initially applied to the molecules using the thermostat.
      - md: int equilibration-steps
        Number of MD timesteps to run before start of coupled simulation.
        Can be 0 if MD checkpoint is used.
      - md: int number-md-simulations:
        Total number of MD instances.
        Set to 1 to disable multi-instance sampling.
        Set to "dynamic" to change the ensemble size at runtime as required.
      - md: int min-number-md:
        Minimum number of MD instances.
        Required when number-md-simulations="dynamic".
      - md: double error-start:
        Error threshold at the start of the simulation.
        Required when number-md-simulations="dynamic".
      - md: double error-end:
        Error threshold at the end of the simulation.
        Required when number-md-simulations="dynamic".
      - synthetic: double noise-sigma
        Standard deviation of gaussian noise used to emulate MD flow field data, e.g. "0.1667".
      - double density:
        Density of fluid
        Should be equal to molecules-per-direction[0] / domain-size[0] * molecules-per-direction[1] / domain-size[1] * molecules-per-direction[2] / domain-size[2], unless MD checkpoint is used.
    -->
    <microscopic-solver
      type="{{ couette_test.microscopic_solver.type }}"
      temperature="{{ couette_test.microscopic_solver.temperature }}"
      equilibration-steps="{{ couette_test.microscopic_solver.equilibration_steps }}"
      number-md-simulations="{{ couette_test.microscopic_solver.number_md_simulations }}"
      density="{{ couette_test.microscopic_solver.density }}"
    />

    <!-- Optional feature: tws-loop
      Used to override time-window-size (tws) parameter in <mamico <noise-reduction>>
      Reruns the complete simulation for a range of time-window-size values.
      - int min:
        Starting value of tws.
      - int max:
        Loop while tws <= max.
      - optional int step:
        Increments tws by step, default 1.
      Example <tws-loop min="3" max="100" step="5" />
    -->
  </couette-test>

  <!-- MaMiCo configuration for NieTest, as described in the respective paper -->
  <mamico>
    <!-- "write-every-macroscopic-timestep" means CFD time step /-->
    <macroscopic-cell-configuration
      cell-size="{{ mamico.macroscopic_cell_configuration.cell_size }}"
      linked-cells-per-macroscopic-cell="{{ mamico.macroscopic_cell_configuration.linked_cells_per_macroscopic_cell }}"
      write-every-microscopic-timestep="{{ mamico.macroscopic_cell_configuration.write_every_microscopic_timestep }}"
      microscopic-filename="{{ mamico.macroscopic_cell_configuration.microscopic_filename }}"
      write-every-macroscopic-timestep="{{ mamico.macroscopic_cell_configuration.write_every_macroscopic_timestep }}"
      macroscopic-filename="{{ mamico.macroscopic_cell_configuration.macroscopic_filename }}"
    />
    <!-- particle-insertion type="usher" enables removal of particles  /-->
    <!-- TODO choose insert-every-timestep automatically /-->
    <!-- TODO check tolerance criterium /-->
    <particle-insertion
      type="{{ mamico.macroscopic_cell_configuration.particle_insertion.type}}"
      maximum-number-of-iterations="{{ mamico.macroscopic_cell_configuration.particle_insertion.maximum_number_of_iterations }}"
      maximum-number-of-restarts="{{ mamico.macroscopic_cell_configuration.particle_insertion.maximum_number_of_restarts }}"
      insert-every-timestep="{{ mamico.macroscopic_cell_configuration.particle_insertion.insert_every_timestep }}"
      tolerance="{{ mamico.macroscopic_cell_configuration.particle_insertion.tolerance }}"
    />
    <!--<particle-insertion type="none" />/-->
    <momentum-insertion
      type="{{ mamico.macroscopic_cell_configuration.momentum_insertion.type }}"
      outermost-overlap-layer="{{ mamico.macroscopic_cell_configuration.momentum_insertion.outermost_overlap_layer }}"
      innermost-overlap-layer="{{ mamico.macroscopic_cell_configuration.momentum_insertion.innermost_overlap_layer }}"
    />
    <!-- TODO inconsistent mass flux evaluation? /-->
    <transfer-strategy
      type="{{ mamico.macroscopic_cell_configuration.transfer_strategy.type }}"
      mass-flux-west="{{ mamico.macroscopic_cell_configuration.transfer_strategy.mass_flux_west }}"
      mass-flux-east="{{ mamico.macroscopic_cell_configuration.transfer_strategy.mass_flux_east }}"
      mass-flux-north="{{ mamico.macroscopic_cell_configuration.transfer_strategy.mass_flux_north }}"
      mass-flux-south="{{ mamico.macroscopic_cell_configuration.transfer_strategy.mass_flux_south }}"
      mass-flux-bottom="{{ mamico.macroscopic_cell_configuration.transfer_strategy.mass_flux_bottom }}"
      mass-flux-top="{{ mamico.macroscopic_cell_configuration.transfer_strategy.mass_flux_top }}"
      shift-by-timesteps="{{ mamico.macroscopic_cell_configuration.transfer_strategy.shift_by_timesteps }}"
    />
    <!-- time-window-size means number of coupling cycles/-->
    <!-- TODO try to use local density for boundary force /-->
    <boundary-force
      type="{{ mamico.macroscopic_cell_configuration.boundary_force.type }}"
      west="{{ mamico.macroscopic_cell_configuration.boundary_force.west }}"
      east="{{ mamico.macroscopic_cell_configuration.boundary_force.east }}"
      north="{{ mamico.macroscopic_cell_configuration.boundary_force.north }}"
      south="{{ mamico.macroscopic_cell_configuration.boundary_force.south }}"
      bottom="{{ mamico.macroscopic_cell_configuration.boundary_force.bottom }}"
      top="{{ mamico.macroscopic_cell_configuration.boundary_force.top }}"
      density="{{ mamico.macroscopic_cell_configuration.boundary_force.density }}"
      temperature="{{ mamico.macroscopic_cell_configuration.boundary_force.temperature }}"
    />
    <parallel-topology type="{{ mamico.macroscopic_cell_configuration.parallel_topology.type }}" />
    <!-- the thermostat option defines, where to apply the above defined temperature within the md region, options:
      -all: the thermostat will be applied in every cell of the md region
      -outerLayers: the thermostat will be applied in the value defined in "number-layers" (integer value) number of layers, starting with the most outer layer
      -onlyOutestLayer: the thermostat will be applied only in the outest cell layer of the md region
      -nowhere: the thermostat will be applied nowehere within the md region /-->
    <thermostat
      type="{{ mamico.macroscopic_cell_configuration.thermostat.type }}"
      number-layers="{{ mamico.macroscopic_cell_configuration.thermostat.number_layers }}"
    />
  </mamico>

  <molecular-dynamics>

    <!-- initial temperature should be 1.27 to reach 1.1 after equilibration /-->
    <molecule-configuration
      mass="{{ molecular_dynamics.molecule_configuration.mass }}"
      temperature="{{ molecular_dynamics.molecule_configuration.temperature }}"
      sigma="{{ molecular_dynamics.molecule_configuration.sigma }}"
      epsilon="{{ molecular_dynamics.molecule_configuration.epsilon }}"
      mean-velocity="{{ molecular_dynamics.molecule_configuration.mean_velocity }}"
    ></molecule-configuration>

    <!-- number of linked cells must be divisible by number-of-processes /-->
    <!-- number of mpi ranks must be total number-of-processes /-->
    <mpi-configuration
      number-of-processes="{{ molecular_dynamics.mpi_configuration.number_of_processes }}"
    ></mpi-configuration>

    <!-- TODO check fix-seed for mamico / USHER /-->
    <simulation-configuration
      dt="{{ molecular_dynamics.simulation_configuration.dt }}"
      number-of-timesteps="{{ molecular_dynamics.simulation_configuration.number_of_timesteps }}"
      reorganise-memory-every-timestep="{{ molecular_dynamics.simulation_configuration.reorganise_memory_every_timestep }}"
      compute-macroscopic-quantities-every-timestep="{{ molecular_dynamics.simulation_configuration.compute_macroscopic_quantities_every_timestep }}"
      fix-seed="{{ molecular_dynamics.simulation_configuration.fix_seed }}"
    ></simulation-configuration>

    <vtk-configuration
      filename="{{ molecular_dynamics.vtk_configuration.filename }}"
      write-every-timestep="{{ molecular_dynamics.vtk_configuration.write_every_timestep }}"
    ></vtk-configuration>
    <adios2-configuration
      directory-name="{{ molecular_dynamics.adios2_configuration.directory_name }}"
      write-every-timestep="{{ molecular_dynamics.adios2_configuration.write_every_timestep }}"
    ></adios2-configuration>

    <checkpoint-configuration
      filename="{{ molecular_dynamics.checkpoint_configuration.filename }}"
      write-every-timestep="{{ molecular_dynamics.checkpoint_configuration.write_every_timestep }}"
    ></checkpoint-configuration>

    <!-- max density using molecules-per-direction ca. 0.9  /-->
    <!-- cutoff-radius should be 2.2 to be consistent with Nie et. al paper /-->
    <domain-configuration
      init-from-sequential-checkpoint="{{ molecular_dynamics.domain_configuration.init_from_sequential_checkpoint }}"

      molecules-per-direction="{{ molecular_dynamics.domain_configuration.molecules_per_direction }}"
      domain-size="{{ molecular_dynamics.domain_configuration.domain_size }}"
      domain-offset="{{ molecular_dynamics.domain_configuration.domain_offset }}"
      cutoff-radius="{{ molecular_dynamics.domain_configuration.cutoff_radius }}"
      linked-cell-size="{{ molecular_dynamics.domain_configuration.linked_cell_size }}"
      k_B="{{ molecular_dynamics.domain_configuration.k_B }}"
      block-size="{{ molecular_dynamics.domain_configuration.block_size }}"

      bottom-south-west="{{ molecular_dynamics.domain_configuration.bottom_south_west }}"
      bottom-south="{{ molecular_dynamics.domain_configuration.bottom_south }}"
      bottom-south-east="{{ molecular_dynamics.domain_configuration.bottom_south_east }}"
      bottom-west="{{ molecular_dynamics.domain_configuration.bottom_west }}"
      bottom="{{ molecular_dynamics.domain_configuration.bottom }}"
      bottom-east="{{ molecular_dynamics.domain_configuration.bottom_east }}"
      bottom-north-west="{{ molecular_dynamics.domain_configuration.bottom_north_west }}"
      bottom-north="{{ molecular_dynamics.domain_configuration.bottom_north }}"
      bottom-north-east="{{ molecular_dynamics.domain_configuration.bottom_north_east }}"
      south-west="{{ molecular_dynamics.domain_configuration.south_west }}"
      south="{{ molecular_dynamics.domain_configuration.south }}"
      south-east="{{ molecular_dynamics.domain_configuration.south_east }}"
      west="{{ molecular_dynamics.domain_configuration.west }}"
      east="{{ molecular_dynamics.domain_configuration.east }}"
      north-west="{{ molecular_dynamics.domain_configuration.north_west }}"
      north="{{ molecular_dynamics.domain_configuration.north }}"
      north-east="{{ molecular_dynamics.domain_configuration.north_east }}"
      top-south-west="{{ molecular_dynamics.domain_configuration.top_south_west }}"
      top-south="{{ molecular_dynamics.domain_configuration.top_south }}"
      top-south-east="{{ molecular_dynamics.domain_configuration.top_south_east }}"
      top-west="{{ molecular_dynamics.domain_configuration.top_west }}"
      top="{{ molecular_dynamics.domain_configuration.top }}"
      top-east="{{ molecular_dynamics.domain_configuration.top_east }}"
      top-north-west="{{ molecular_dynamics.domain_configuration.top_north_west }}"
      top-north="{{ molecular_dynamics.domain_configuration.top_north }}"
      top-north-east="{{ molecular_dynamics.domain_configuration.top_north_east}}"
    > </domain-configuration>

  </molecular-dynamics>

  <!-- XML config file used by MaMiCo's FilterPipeline -->

  <filter-pipeline>

    <per-instance
      output="{{ filter_pipeline.per_instance.output }}"
    >
      </per-instance>

    <post-multi-instance
      output="{{ filter_pipeline.post_multi_instance.output }}"
    >
      </post-multi-instance>

  </filter-pipeline>
</scenario-configuration>
